//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ws2811_channel_t : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ws2811_channel_t(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ws2811_channel_t obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ws2811_channel_t() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          rpi_ws281xPINVOKE.delete_ws2811_channel_t(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public int gpionum {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_gpionum_set(swigCPtr, value);
    } 
    get {
      int ret = rpi_ws281xPINVOKE.ws2811_channel_t_gpionum_get(swigCPtr);
      return ret;
    } 
  }

  public int invert {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_invert_set(swigCPtr, value);
    } 
    get {
      int ret = rpi_ws281xPINVOKE.ws2811_channel_t_invert_get(swigCPtr);
      return ret;
    } 
  }

  public int count {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_count_set(swigCPtr, value);
    } 
    get {
      int ret = rpi_ws281xPINVOKE.ws2811_channel_t_count_get(swigCPtr);
      return ret;
    } 
  }

  public int strip_type {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_strip_type_set(swigCPtr, value);
    } 
    get {
      int ret = rpi_ws281xPINVOKE.ws2811_channel_t_strip_type_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_int leds {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_leds_set(swigCPtr, SWIGTYPE_p_unsigned_int.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = rpi_ws281xPINVOKE.ws2811_channel_t_leds_get(swigCPtr);
      SWIGTYPE_p_unsigned_int ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_int(cPtr, false);
      return ret;
    } 
  }

  public byte brightness {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_brightness_set(swigCPtr, value);
    } 
    get {
      byte ret = rpi_ws281xPINVOKE.ws2811_channel_t_brightness_get(swigCPtr);
      return ret;
    } 
  }

  public byte wshift {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_wshift_set(swigCPtr, value);
    } 
    get {
      byte ret = rpi_ws281xPINVOKE.ws2811_channel_t_wshift_get(swigCPtr);
      return ret;
    } 
  }

  public byte rshift {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_rshift_set(swigCPtr, value);
    } 
    get {
      byte ret = rpi_ws281xPINVOKE.ws2811_channel_t_rshift_get(swigCPtr);
      return ret;
    } 
  }

  public byte gshift {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_gshift_set(swigCPtr, value);
    } 
    get {
      byte ret = rpi_ws281xPINVOKE.ws2811_channel_t_gshift_get(swigCPtr);
      return ret;
    } 
  }

  public byte bshift {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_bshift_set(swigCPtr, value);
    } 
    get {
      byte ret = rpi_ws281xPINVOKE.ws2811_channel_t_bshift_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_unsigned_char gamma {
    set {
      rpi_ws281xPINVOKE.ws2811_channel_t_gamma_set(swigCPtr, SWIGTYPE_p_unsigned_char.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = rpi_ws281xPINVOKE.ws2811_channel_t_gamma_get(swigCPtr);
      SWIGTYPE_p_unsigned_char ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
      return ret;
    } 
  }

  public ws2811_channel_t() : this(rpi_ws281xPINVOKE.new_ws2811_channel_t(), true) {
  }

}
