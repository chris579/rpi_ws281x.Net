//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class rpi_ws281x {
  public static ws2811_return_t ws2811_init(ws2811_t ws2811) {
    ws2811_return_t ret = (ws2811_return_t)rpi_ws281xPINVOKE.ws2811_init(ws2811_t.getCPtr(ws2811));
    return ret;
  }

  public static void ws2811_fini(ws2811_t ws2811) {
    rpi_ws281xPINVOKE.ws2811_fini(ws2811_t.getCPtr(ws2811));
  }

  public static ws2811_return_t ws2811_render(ws2811_t ws2811) {
    ws2811_return_t ret = (ws2811_return_t)rpi_ws281xPINVOKE.ws2811_render(ws2811_t.getCPtr(ws2811));
    return ret;
  }

  public static ws2811_return_t ws2811_wait(ws2811_t ws2811) {
    ws2811_return_t ret = (ws2811_return_t)rpi_ws281xPINVOKE.ws2811_wait(ws2811_t.getCPtr(ws2811));
    return ret;
  }

  public static string ws2811_get_return_t_str(ws2811_return_t state) {
    string ret = rpi_ws281xPINVOKE.ws2811_get_return_t_str((int)state);
    return ret;
  }

  public static uint ws2811_led_get(ws2811_channel_t channel, int lednum) {
    uint ret = rpi_ws281xPINVOKE.ws2811_led_get(ws2811_channel_t.getCPtr(channel), lednum);
    return ret;
  }

  public static int ws2811_led_set(ws2811_channel_t channel, int lednum, uint color) {
    int ret = rpi_ws281xPINVOKE.ws2811_led_set(ws2811_channel_t.getCPtr(channel), lednum, color);
    return ret;
  }

  public static ws2811_channel_t ws2811_channel_get(ws2811_t ws, int channelnum) {
    global::System.IntPtr cPtr = rpi_ws281xPINVOKE.ws2811_channel_get(ws2811_t.getCPtr(ws), channelnum);
    ws2811_channel_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new ws2811_channel_t(cPtr, false);
    return ret;
  }

  public static readonly int WS2811_TARGET_FREQ = rpi_ws281xPINVOKE.WS2811_TARGET_FREQ_get();
  public static readonly int SK6812_STRIP_RGBW = rpi_ws281xPINVOKE.SK6812_STRIP_RGBW_get();
  public static readonly int SK6812_STRIP_RBGW = rpi_ws281xPINVOKE.SK6812_STRIP_RBGW_get();
  public static readonly int SK6812_STRIP_GRBW = rpi_ws281xPINVOKE.SK6812_STRIP_GRBW_get();
  public static readonly int SK6812_STRIP_GBRW = rpi_ws281xPINVOKE.SK6812_STRIP_GBRW_get();
  public static readonly int SK6812_STRIP_BRGW = rpi_ws281xPINVOKE.SK6812_STRIP_BRGW_get();
  public static readonly int SK6812_STRIP_BGRW = rpi_ws281xPINVOKE.SK6812_STRIP_BGRW_get();
  public static readonly int SK6812_SHIFT_WMASK = rpi_ws281xPINVOKE.SK6812_SHIFT_WMASK_get();
  public static readonly int WS2811_STRIP_RGB = rpi_ws281xPINVOKE.WS2811_STRIP_RGB_get();
  public static readonly int WS2811_STRIP_RBG = rpi_ws281xPINVOKE.WS2811_STRIP_RBG_get();
  public static readonly int WS2811_STRIP_GRB = rpi_ws281xPINVOKE.WS2811_STRIP_GRB_get();
  public static readonly int WS2811_STRIP_GBR = rpi_ws281xPINVOKE.WS2811_STRIP_GBR_get();
  public static readonly int WS2811_STRIP_BRG = rpi_ws281xPINVOKE.WS2811_STRIP_BRG_get();
  public static readonly int WS2811_STRIP_BGR = rpi_ws281xPINVOKE.WS2811_STRIP_BGR_get();
  public static readonly int WS2812_STRIP = rpi_ws281xPINVOKE.WS2812_STRIP_get();
  public static readonly int SK6812_STRIP = rpi_ws281xPINVOKE.SK6812_STRIP_get();
  public static readonly int SK6812W_STRIP = rpi_ws281xPINVOKE.SK6812W_STRIP_get();
}
